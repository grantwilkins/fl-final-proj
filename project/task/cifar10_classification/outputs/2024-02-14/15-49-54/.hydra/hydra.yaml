---
hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: "${hydra.help.app_name} is powered by Hydra.\n"
    footer: "Powered by Hydra (https://hydra.cc)\nUse --hydra-help to view Hydra specific\
      \ help\n"
    template: "${hydra.help.header}\n== Configuration groups ==\nCompose your configuration\
      \ from those groups (group=option)\n\n$APP_CONFIG_GROUPS\n\n== Config ==\nOverride anything\
      \ in the config (foo.bar=value)\n\n$CONFIG\n\n${hydra.help.footer}\n"
  hydra_help:
    template: "Hydra (${hydra.runtime.version})\nSee https://hydra.cc for more info.\n\n==\
      \ Flags ==\n$FLAGS_HELP\n\n== Configuration groups ==\nCompose your configuration from\
      \ those groups (For example, append hydra/job_logging=disabled to command line)\n\n\
      $HYDRA_CONFIG_GROUPS\n\nUse '--cfg hydra' to Show the Hydra config.\n"
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers: [console]
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers: [console, file]
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: [hydra.mode=RUN]
    task: []
  job:
    name: dataset_preparation
    chdir: null
    override_dirname: ''
    id: ???
    num: ???
    config_name: cifar10
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /Users/grantwilkins/fl-final-proj/project/task/cifar10_classification
    config_sources:
      - path: hydra.conf
        schema: pkg
        provider: hydra
      - path: /Users/grantwilkins/fl-final-proj/project/conf
        schema: file
        provider: main
      - path: ''
        schema: structured
        provider: schema
    output_dir: /Users/grantwilkins/fl-final-proj/project/task/cifar10_classification/outputs/2024-02-14/15-49-54
    choices:
      dataset: cifar10
      strategy: fedavg
      fed: cifar10
      task: cifar10
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
